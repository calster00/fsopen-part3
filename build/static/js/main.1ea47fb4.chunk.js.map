{"version":3,"sources":["components/Filter.js","components/AddContactForm.js","components/ContactList.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Filter","inputValue","onChange","value","AddContactForm","props","name","onNameChange","number","onNumberChange","onClick","onSubmit","type","ContactList","persons","removePerson","map","person","key","baseUrl","axios","get","then","response","data","newContact","post","id","delete","Notification","notification","className","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchTerm","setSearchTerm","setNotification","useEffect","contactService","contacts","notifyWith","setTimeout","personsToShow","length","filter","toLowerCase","includes","event","target","preventDefault","returnedPerson","concat","catch","error","console","log","window","confirm","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ea47fb4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ inputValue, onChange }) => {\n  return (\n    <div>\n      Filter: <input value={inputValue} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst AddContactForm = (props) => {\n  return (\n    <form>\n      <div>\n        name: <input value={props.name} onChange={props.onNameChange} />\n      </div>\n      <div>\n        number: <input value={props.number} onChange={props.onNumberChange} />\n      </div>\n      <div>\n        <button onClick={props.onSubmit} type=\"submit\">\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddContactForm;\n","import React from \"react\";\n\nconst ContactList = ({ persons, removePerson }) => {\n  return (\n      persons.map((person) => (\n        <p key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => removePerson(person)}>delete</button>\n        </p>\n      ))\n  );\n};\n\nexport default ContactList;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  return axios\n    .get(baseUrl)\n    .then((response) => response.data);\n};\n\nconst create = (newContact) => {\n  return axios\n    .post(baseUrl, newContact)\n    .then((response) => response.data);\n};\n\nconst update = (id, newContact) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newContact)\n    .then((response) => response.data);\n};\n\nconst remove = (id) => {\n  return axios\n    .delete(`${baseUrl}/${id}`)\n    .then((response) => response.data);\n};\n\n\nexport default { getAll, create, update, remove };","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n\n  return <div className={notification.type}>{notification.message}</div>;\n};\n\nexport default Notification;","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport AddContactForm from \"./components/AddContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport contactService from \"./services/contacts\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(contacts => {\n        setPersons(contacts)\n      })\n  }, []);\n\n  const notifyWith = (message, type=\"success\") => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!newName) return;\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // const existingContact = persons.find((person) => person.name === newName);\n\n    // if (existingContact) {\n    //   const confirmDialog = `${newName} is already added to phonebook, replace the old number with a new one?`;\n\n    //   if (window.confirm(confirmDialog)) {\n    //     contactService\n    //       .update(existingContact.id, newPerson)\n    //       .then((returnedPerson) => {\n    //         setPersons(persons.map(person => {\n    //           return person.id === returnedPerson.id ? returnedPerson : person;\n    //         }));\n    //         setNewName(\"\");\n    //         setNewNumber(\"\");\n    //         notifyWith(`Changed number of  ${existingContact.name}`)\n    //       })\n    //       .catch((error) => {\n    //         notifyWith(\n    //           `Information for ${existingContact.name} has already been removed from the server`,\n    //           \"error\"\n    //         );\n    //         setPersons(persons.filter(person => person.id !== existingContact.id));\n    //       })\n    //   }\n    //   return;\n    // }\n\n    contactService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        notifyWith(`Added ${returnedPerson.name}`);\n      })\n      .catch(error => {\n        console.log(error.response.data.error)\n        notifyWith(`${error.response.data.error} `, 'error')\n      })\n  };\n\n  const removePerson = ({ id, name }) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      contactService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id));\n          notifyWith(`Removed ${name}`);\n        })\n        .catch(() => {\n          setPersons(persons.filter(p => p.id !== id));\n          notifyWith(`${name} had already been removed`, \"error\");\n        })\n    }\n  };\n\n  const personsToShow = searchTerm.length === 0\n    ? persons \n    : persons.filter((person) => person.name.toLowerCase().includes(searchTerm));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}/>\n      <Filter \n        inputValue={searchTerm} \n        onChange={handleFilterChange} \n      />\n      <h3>Add new contact</h3>\n      <AddContactForm\n        name={newName}\n        number={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        onSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <ContactList \n        persons={personsToShow}\n        removePerson={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}